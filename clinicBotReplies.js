// clinicBotReplies.js
function normalize(text) {
  return text
    .toLowerCase()
    .replace(/[!?.ุ]/g, "")
    .trim();
}

const keywords = {
  greeting: ["ูุฑุญุจุง", "ุงููุง", "hello", "hi", "hey", "ุงูุณูุงู"],
  schedule: [
    "ููุงุนูุฏ",
    "ุงููุงุช",
    "ุฏูุงู",
    "opening",
    "hours",
    "schedule",
    "work time",
  ],
  price: ["ุณุนุฑ", "ุงููููุณ", "ูุดู", "ุชูููุฉ", "price", "cost", "fees"],
  location: ["ูููุน", "ููู", "address", "location", "map", "place"],
  thanks: ["ุดูุฑุง", "thx", "thanks", "thank you", "ูุดููุฑ"],
};

function getReply(text) {
  const lower = normalize(text);

  // Helper to check if text includes any word from list
  const includesAny = (arr) => arr.some((w) => lower.includes(w));

  if (includesAny(keywords.greeting)) {
    return "๐ ุฃููุงู ูุณููุงู ูู *ุนูุงุฏุฉ ุงุจุชุณุงูุฉ ุงูุทุจููุฉ*! ููู ูููููู ูุณุงุนุฏุชู ุงููููุ";
  }

  if (includesAny(keywords.schedule)) {
    return "๐ ููุงุนูุฏ ุงูุนูู: ููููุงู ูู *9 ุตุจุงุญุงู ุฅูู 9 ูุณุงุกู* ูุง ุนุฏุง *ุงูุฌูุนุฉ ูุบูู*.";
  }

  if (includesAny(keywords.price)) {
    return "๐ฐ ุชูููุฉ ุงููุดู: *150 ุฑูุงู* ูุชุดูู ุงูุงุณุชุดุงุฑุฉ ูุงููุญุต ุงููุงูู.";
  }

  if (includesAny(keywords.location)) {
    return "๐ ูููุน ุงูุนูุงุฏุฉ: *ุนููุงู โ ุนุจุฏููุ ุฎูู ุจูู ุงูุฅุณูุงูุ ุงูุทุงุจู ุงูุฃูู*.\nGoogle Maps: https://maps.google.com";
  }

  if (includesAny(keywords.thanks)) {
    return "๐ ุงูุนูู! ูุชููู ูู ูููุงู ุฌูููุงู ูุตุญุฉ ุฏุงุฆูุฉ ๐";
  }

  // Default fallback
  return `๐ค ุงุณุชููุช ุฑุณุงูุชู: โ${text}โ\n\nููููู ุณุคุงูู ุนู: *ุงูููุงุนูุฏ ๐ุ ุงูุฃุณุนุงุฑ ๐ฐุ ุงููููุน ๐ุ ุฃู ุงูุญุฌุฒ ๐*.`;
}

module.exports = getReply;
